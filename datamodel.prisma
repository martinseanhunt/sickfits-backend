enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PERMISSIONUPDATE
}

type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  resetToken: String @unique
  resetTokenExpiry: Float
  permissions: [Permission]
  cart: [CartItem!]! #Prisma will automagically hook this up and inset the cart item id's where a relationship is created
}

type Item {
  id: ID! @unique
  title: String!
  description: String!
  image: String 
  largeImage: String
  price: Int!
  createdAt: DateTime! """Not a standard graph QL type, feature of Prisma"""
  updatedAt: DateTime!
  user: User!
}

type CartItem {
  id: ID! @unique,
  quantity: Int! @default(value: 1)
  item: Item #relationsip to item - no ! here otherwise we can't delete the item if it's in someones cart
  user: User! #relationsip to item
}

# Everything about the item needs to be cemented here rather than creating a relationship to an Item 
# if the item were to be deleted we don't want to lost the history of what was paid etc!
type OrderItem {
  id: ID! @unique,  
  title: String!,
  description: String!, 
  image: String!, 
  price: Int!, 
  quantity: Int! @default(value:1)
  user: User
}

type Order {
  id: ID! @unique, 
  items: [OrderItem!]!,
  total: Int,
  user: User!, 
  charge: String! #coming back from stripe!
  createdAt: DateTime! # these fields are always set by prisma but we need to 
  updatedAt: DateTime! # set them explicitly here in order to expose to other parts of the app
  # I wonder f I coudld expose them in schema.graphql instead? or if it needs to be here? 
}